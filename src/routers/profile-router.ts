import {
	getAutoGeneratedPlaylist,
	getFollowersProfile,
	getFollowersProfilePublic,
	getFollowingsProfile,
	getIsFollowing,
	getPlaylistAudios,
	getPrivatePlaylistAudios,
	getPublicPlaylist,
	getPublicProfile,
	getPublicUploads,
	getRecommendByProfile,
	getUploads,
	updateFollower,
} from '@/controllers/profile-controllers';
import { isAuth, mustAuth } from '@/middleware/auth';
import { Router } from 'express';

const profileRouter = Router();

// Add/remove follower
profileRouter.post('/update-follower/:profileId', mustAuth, updateFollower);

// Get the user's uploaded audios
profileRouter.get('/uploads', mustAuth, getUploads);

// Get other user's uploaded audios
profileRouter.get('/uploads/:profileId', getPublicUploads);

// Get other user's profile info
profileRouter.get('/info/:profileId', getPublicProfile);

// Get other user's playlists
profileRouter.get('/playlist/:profileId', getPublicPlaylist);

profileRouter.get('/playlist-audios/:playlistId', getPlaylistAudios);

// Get the user's private playlists
profileRouter.get(
	'/private-playlist-audios/:playlistId',
	mustAuth,
	getPrivatePlaylistAudios
);

// Get recommended audios
profileRouter.get('/recommended', isAuth, getRecommendByProfile);

// Get auto-generated playlists
profileRouter.get(
	'/auto-generated-playlist',
	mustAuth,
	getAutoGeneratedPlaylist
);

// Get followers' profiles
profileRouter.get('/followers', mustAuth, getFollowersProfile);

// Get other user's followers' profiles
profileRouter.get('/followers/:profileId', mustAuth, getFollowersProfilePublic);

// Get followings' profiles
profileRouter.get('/followings', mustAuth, getFollowingsProfile);

// Check if the user is following the profile
profileRouter.get('/is-following/:profileId', mustAuth, getIsFollowing);

export default profileRouter;
